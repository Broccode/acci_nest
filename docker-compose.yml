version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: acci_user
      POSTGRES_PASSWORD: acci_password
      POSTGRES_DB: acci_nest
    networks:
      - acci_network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - acci_network

  backend:
    build:
      context: .
      dockerfile: ./deploy/docker-compose/backend.dockerfile
    volumes:
      - ./src/backend:/app
      - /app/node_modules
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: acci_user
      DB_PASSWORD: acci_password
      DB_NAME: acci_nest
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: development_jwt_secret
      JWT_EXPIRES_IN: 3600
      PORT: 3001
      BUN_ENV: development
    networks:
      - acci_network
    command: bun run start:dev

  frontend:
    build:
      context: .
      dockerfile: ./deploy/docker-compose/frontend.dockerfile
    volumes:
      - ./src/frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      NODE_ENV: development
      BUN_ENV: development
      REACT_APP_API_URL: http://localhost:3001
    networks:
      - acci_network
    command: bun run start

networks:
  acci_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: 